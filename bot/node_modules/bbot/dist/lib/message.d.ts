import * as bot from '..';
export declare abstract class Message {
    id: string;
    user: bot.User;
    nlu?: bot.NLU;
    constructor(user: bot.IUser, id?: string);
    abstract toString(): string;
    clone(): any;
}
export declare class NullMessage extends Message {
    constructor();
    toString(): string;
}
export declare class TextMessage extends Message {
    text: string;
    constructor(user: bot.User, text: string, id?: string);
    toString(): string;
}
export declare class RichMessage extends Message {
    payload: any;
    constructor(user: bot.User, payload: any, id?: string);
    toString(): string;
}
export declare abstract class EventMessage extends Message {
    abstract event: string;
    toString(): string;
}
export declare class EnterMessage extends EventMessage {
    event: string;
}
export declare class LeaveMessage extends EventMessage {
    event: string;
}
export declare class TopicMessage extends EventMessage {
    event: string;
}
export interface IServerMessageOptions {
    userId: string;
    roomId?: string;
    data?: any;
    id?: string;
}
export declare class ServerMessage extends EventMessage {
    event: string;
    data: any;
    constructor(options: IServerMessageOptions);
    toString(): string;
}
export declare class CatchAllMessage extends Message {
    message: Message;
    constructor(message: Message);
    toString(): string;
}
