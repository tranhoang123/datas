import * as bot from '..';
export declare const bits: {
    [id: string]: Bit;
};
export interface IBit {
    id?: string;
    send?: string | string[];
    catch?: string;
    callback?: bot.IBranchCallback;
    catchCallback?: bot.IBranchCallback;
    condition?: RegExp | string;
    intent?: string;
    scope?: string;
    next?: string | string[];
    options?: string;
    [key: string]: any;
}
export declare class Bit implements IBit {
    id: string;
    send?: string | string[];
    catch?: string;
    callback?: bot.IBranchCallback;
    catchCallback?: bot.IBranchCallback;
    condition?: RegExp | string;
    intent?: string;
    next?: string | string[];
    options?: string;
    [key: string]: any;
    constructor(options: IBit);
    execute(b: bot.State): Promise<void>;
}
export declare function setupBit(options: IBit): string;
export declare function doBit(id: string, b: bot.State): Promise<void>;
