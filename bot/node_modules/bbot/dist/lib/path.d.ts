import * as bot from '..';
export interface IPath {
    scope?: string;
    listen?: {
        [id: string]: bot.TextBranch | bot.CustomBranch;
    };
    understand?: {
        [id: string]: bot.NaturalLanguageBranch | bot.CustomBranch;
    };
    serve?: {
        [id: string]: bot.ServerBranch | bot.CustomBranch;
    };
    act?: {
        [id: string]: bot.CatchAllBranch;
    };
}
export declare class Path implements IPath {
    scope: string;
    listen: {
        [id: string]: bot.TextBranch | bot.CustomBranch;
    };
    understand: {
        [id: string]: bot.NaturalLanguageBranch | bot.CustomBranch;
    };
    serve: {
        [id: string]: bot.ServerBranch | bot.CustomBranch;
    };
    act: {
        [id: string]: bot.CatchAllBranch;
    };
    constructor(init?: Path | IPath);
    forced(collection: 'listen' | 'understand' | 'act'): number;
    add(branch: bot.Branch, collection: 'listen' | 'understand' | 'act' | 'serve'): string;
    reset(): void;
    text(condition: string | RegExp | bot.Condition | bot.Condition[] | bot.ConditionCollection | bot.Conditions, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    direct(condition: string | RegExp | bot.Condition | bot.Condition[] | bot.ConditionCollection | bot.Conditions, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    custom(matcher: bot.IMatcher, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    catchAll(action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    NLU(criteria: bot.NaturalLanguageCriteria, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    directNLU(criteria: bot.NaturalLanguageCriteria, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    customNLU(matcher: bot.IMatcher, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    enter(action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    leave(action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    topic(action: bot.IBranchCallback | string, options?: bot.IBranch): string;
    server(criteria: bot.IServerBranchCriteria, action: bot.IBranchCallback | string, options?: bot.IBranch): string;
}
export declare const global: bot.Path;
