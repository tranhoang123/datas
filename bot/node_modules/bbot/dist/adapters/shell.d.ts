import * as bBot from '..';
import Transport from 'winston-transport';
import * as inquirer from 'inquirer';
export declare class Shell extends bBot.MessageAdapter {
    name: string;
    debug: boolean;
    ui: any;
    logs: string[];
    messages: [string, string][];
    line: inquirer.objects.Separator;
    transport?: Transport;
    user?: bBot.User;
    room?: {
        id?: string;
        name?: string;
    };
    private static instance;
    private constructor();
    static getInstance(bot: typeof bBot): Shell;
    render(): Promise<void>;
    logSetup(): void;
    log(logEvent: any, callback: any): void;
    start(): Promise<void>;
    roomSetup(): Promise<void>;
    prompt(): Promise<void>;
    dispatch(envelope: bBot.Envelope): Promise<void>;
    shutdown(): Promise<void>;
}
export declare const use: (bot: typeof bBot) => Shell;
