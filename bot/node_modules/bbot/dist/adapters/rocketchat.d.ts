import * as bBot from '..';
import * as sdk from '@rocket.chat/sdk';
export declare class Rocketchat extends bBot.MessageAdapter {
    name: string;
    driver: typeof sdk.driver;
    methodCache: typeof sdk.methodCache;
    api: typeof sdk.api;
    settings: typeof sdk.settings;
    private static instance;
    static getInstance(bot: typeof bBot): Rocketchat;
    private constructor();
    getRoomId: (room: string) => Promise<string>;
    callMethod: (method: string, ...args: any[]) => Promise<any>;
    start(): Promise<void>;
    shutdown(): Promise<void>;
    process(err: Error | null, message: any, meta: any): Promise<bBot.State>;
    format(input: string): string;
    parseEnvelope(envelope: bBot.Envelope, roomId?: string): any[];
    dispatch(envelope: bBot.Envelope): Promise<void>;
}
export declare const use: (bot: any) => Rocketchat;
